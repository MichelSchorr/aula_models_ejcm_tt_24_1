// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id         Int        @id @default(autoincrement())
  cpf        String     @unique
  email      String     @unique
  phone      String[]   @unique
  firstName  String
  lastName   String
  followedBy Client[]   @relation("ClientFollows")
  following  Client[]   @relation("ClientFollows")
  cart       Cart?
  purchase   Purchase[]
}

model Cart {
  client   Client           @relation(fields: [id], references: [id])
  id       Int              @id
  total    Float?           @map("totalValue")
  products ProductsOnCart[]
}

model Product {
  id           Int                  @id @default(autoincrement())
  name         String
  price        Decimal              @db.Money
  category     String
  availability Int                  
  description  String?              @db.Text
  purchases    ProductsOnPurchase[]
  carts        ProductsOnCart[]
}

model Purchase {
  data     DateTime             @default(now())
  client   Client               @relation(fields: [clientId], references: [id])
  clientId Int
  status   String
  total    Float
  products ProductsOnPurchase[]

  @@id([data, clientId])
}

model ProductsOnPurchase {
  product          Product  @relation(fields: [productId], references: [id])
  productId        Int
  purchase         Purchase @relation(fields: [purchaseData, purchaseClientId], references: [data, clientId])
  purchaseData     DateTime
  purchaseClientId Int
  amount           Int
  total            Float

  @@id([productId, purchaseData, purchaseClientId])
}

model ProductsOnCart {
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  amount    Int

  @@id([cartId, productId])
}
