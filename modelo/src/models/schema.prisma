// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id        Int        @id @default(autoincrement())
  cpf       String     @unique @db.Char(11)
  email     String     @unique @db.VarChar(75)
  hash      String
  salt      String
  phone     String[]   @unique @db.Char(14)
  firstName String     @map("first_name") @db.VarChar(25)
  lastName  String     @map("last_name") @db.VarChar(25)
  follower  Client[]   @relation(name: "client_follows")
  following Client[]   @relation(name: "client_follows")
  cart      Cart?
  purchase  Purchase[]

  @@unique([firstName, lastName])
  @@map("client")
}

model Cart {
  client     Client           @relation(fields: [clientId], references: [id])
  clientId   Int              @id @map("client_id")
  totalValue Decimal          @map("total_value") @db.Money
  product    ProductsOnCart[]

  @@map("cart")
}

model Product {
  id          Int                  @id @default(autoincrement())
  name        String               @db.VarChar(100)
  price       Decimal              @db.Money
  category    String[]             @db.VarChar(30)
  stock       Int
  description String?              @db.Text
  purchase    ProductsOnPurchase[]
  cart        ProductsOnCart[]

  @@index(fields: [category], name: "product_ix_category")
  @@map("product")
}

model Purchase {
  date       DateTime             @default(now())
  client     Client               @relation(fields: [clientId], references: [id])
  clientId   Int                  @map("client_id")
  status     String
  totalValue Decimal              @map("total_value") @db.Money
  product    ProductsOnPurchase[]

  @@id([date, clientId])
  @@map("purchase")
}

model ProductsOnPurchase {
  product             Product  @relation(fields: [productId], references: [id])
  productId           Int      @map("product_id")
  purchase            Purchase @relation(fields: [purchaseDate, purchaseClientId], references: [date, clientId])
  purchaseDate        DateTime @map("purchase_date")
  purchaseClientId    Int      @map("purchase_client_id")
  amount              Int
  unitValueOnPurchase Decimal  @map("unit_value_on_purchase") @db.Money

  @@id([productId, purchaseDate, purchaseClientId])
  @@map("products_on_purchase")
}

model ProductsOnCart {
  cart         Cart    @relation(fields: [cartClientId], references: [clientId])
  cartClientId Int     @map("cart_client_id")
  product      Product @relation(fields: [productId], references: [id])
  productId    Int     @map("product_id")
  amount       Int

  @@id([cartClientId, productId])
  @@map("products_on_cart")
}
